const text: string = "# How to host a kachery node\n\nMost of the action in the kachery network involves communication between\n[nodes](https://github.com/kacheryhub/kachery-doc/blob/main/doc/node.md). These are the network peers that exchange information\nand maintain offline storage in the content-addressable database; nodes\nmay also optionally be the owners of [feeds](https://github.com/kacheryhub/kachery-doc/blob/main/doc/feeds.md) or provide\n[task execution resources](https://github.com/kacheryhub/kachery-doc/blob/main/doc/tasks.md).\n\nA kachery node can be hosted on anything from a modest user machine\n(such as a laptop) to a large shared lab resource with abundant\nnetwork-attached storage. A straightforward model is to run\na node on your individual workstation or laptop.\n\nYou can host a kachery node by running a kachery daemon on your computer. Once the daemon is running, you can register the node on kacheryhub and configure the node using the web interface.\n\n## Requirements\n\nTested on Linux, should also work on macOS and Windows Subsystem for Linux\n\n* Python >=3.8\n* NumPy\n* Nodejs >=12 (available on conda-forge; see below)\n\nTo interact with the kachery network, you will also need a free Google account for authentication with kacheryhub.\n\n## Installation using Conda\n\nWe highly recommend using Conda or another virtual-environment provider\nwhen setting up your node, for ease of updates and to avoid potential\nversion conflict issues.\n\nThe basic setup looks like this:\n\n```bash\nconda create --name kachery-node-env python=3.8\nconda activate kachery-node-env\n\nconda install -c conda-forge nodejs\n\n# On MacOS, if the above command does not give you nodejs >= 12:\n# conda install nodejs -c conda-forge --repodata-fn=repodata.json\n\n# install numpy\npip install numpy\n\n# Install/update kachery-daemon\npip install --upgrade kachery-daemon\n\n# You may also choose to install kachery-client, if you intend\n# to use the same virtual environment for all kachery interactions.\npip install --upgrade kachery-client\n```\n\n## Installation without conda\n\nIt is also possible to install without conda. Just make sure that the above requirements are met on your system, and then `pip install --upgrade kachery-daemon` as above.\n\n## Running the daemon\n\nEnsure you are in the correct conda environment, then:\n\n```bash\n# Start the daemon\nkachery-daemon-start --label <WHATEVER YOU CHOOSE> --owner <YOUR GOOGLE ACCOUNT ID>\n# The label flag can have any value: it will be visible on kacheryhub, so it should be\n# appropriate for public use, but it need not be unique.\n# The owner flag should be passed a full Google account address, e.g.:\n# --owner sergey.brin@google.com\n```\n\nLeave this running, and in another terminal window, use:\n> `kachery-daemon-info`\nto print the node ID of the running node.\n\nYou may find it convenient to use [tmux](https://github.com/tmux/tmux/wiki)\nfor terminal session management, instead of opening additional terminal\nwindows.\n\n## Configuring on kacheryhub\n\nLog in to kacheryhub with the same google account you passed for the\n`--owner` flag when starting\nthe daemon, then click the `add kachery node` button and follow the\ninstructions on screen to register your node.\n\nYou can now click on your node ID to join channels. Indicate the roles\nyou would like to perform, and inform the channel owner (through another\nmeans of communication) of your name and node id. Once you've been authorized,\nyou can start using the client commands discussed in the\n[kachery-client documentation](https://github.com/kacheryhub/kachery-doc/blob/main/doc/client-howto.md).\n\nOther more advanced options are available, such as specifying listen ports (see below).\n\n## Advanced configuration\n\nEnvironment variables for the daemon\n\n* `KACHERY_STORAGE_DIR` **(optional)** - Refers to an existing directory on your local computer. This is where kachery stores all of your cached files. If not set, files will be stored in the default location: `$HOME/kachery-storage`.\n* `KACHERY_DAEMON_PORT` **(optional)** - Port that the daemon will listen on. If not provided, a default port will be used.\n\nEnvironment variables for the client\n\n* `KACHERY_DAEMON_PORT` **(optional)** - Port for connecting to the daemon (should match the above)\n* `KACHERY_DAEMON_HOST` **(optional)** - Host for connecting to the daemon\n* `KACHERY_TEMP_DIR` **(optional)** - Existing directory where temporary files are stored - not the same as `KACHERY_STORAGE_DIR`.\n"

export default text